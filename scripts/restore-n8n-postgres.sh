#!/bin/bash
# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ PostgreSQL –±—ç–∫–∞–ø–∞ –¥–ª—è n8n
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/restore-n8n-postgres.sh <backup-file.sql.gz>

set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ $# -eq 0 ]; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: —É–∫–∞–∂–∏—Ç–µ —Ñ–∞–π–ª –±—ç–∫–∞–ø–∞${NC}"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
    echo "  $0 <backup-file.sql.gz>"
    echo ""
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –±—ç–∫–∞–ø—ã:"
    ls -lh /home/ilyasni/n8n-server/n8n-installer/.backups/postgres/*.sql.gz 2>/dev/null || echo "  –ù–µ—Ç –±—ç–∫–∞–ø–æ–≤"
    exit 1
fi

BACKUP_FILE="$1"
BACKUP_DIR="/home/ilyasni/n8n-server/n8n-installer/.backups/postgres"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
if [ ! -f "${BACKUP_FILE}" ] && [ ! -f "${BACKUP_DIR}/${BACKUP_FILE}" ]; then
    echo -e "${RED}‚ùå –§–∞–π–ª –±—ç–∫–∞–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${BACKUP_FILE}${NC}"
    exit 1
fi

# –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ç–æ–ª—å–∫–æ –∏–º—è —Ñ–∞–π–ª–∞, –¥–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å
if [ ! -f "${BACKUP_FILE}" ]; then
    BACKUP_FILE="${BACKUP_DIR}/${BACKUP_FILE}"
fi

echo -e "${YELLOW}‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –£–î–ê–õ–ò–¢ –≤—Å–µ —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ n8n!${NC}"
echo ""
echo "–§–∞–π–ª –±—ç–∫–∞–ø–∞: ${BACKUP_FILE}"
echo ""
read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): " -r
if [[ ! $REPLY =~ ^[Yy]es$ ]]; then
    echo "–û—Ç–º–µ–Ω–µ–Ω–æ"
    exit 0
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ PostgreSQL
if ! docker ps | grep -q "postgres"; then
    echo -e "${RED}‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä postgres –Ω–µ –∑–∞–ø—É—â–µ–Ω!${NC}"
    exit 1
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º n8n
echo -e "${YELLOW}üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º n8n...${NC}"
cd /home/ilyasni/n8n-server/n8n-installer
docker compose stop n8n n8n-worker || true

# –†–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä—É–µ–º –±—ç–∫–∞–ø
TEMP_SQL="/tmp/restore-$(basename ${BACKUP_FILE} .gz)"
echo -e "${YELLOW}üì¶ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –±—ç–∫–∞–ø–∞...${NC}"
gunzip -c "${BACKUP_FILE}" > "${TEMP_SQL}"

# –ö–æ–ø–∏—Ä—É–µ–º SQL –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
docker cp "${TEMP_SQL}" postgres:/tmp/restore.sql

# –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
echo -e "${YELLOW}üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ë–î...${NC}"
docker exec postgres psql -U postgres -d postgres -c "DROP SCHEMA public CASCADE; CREATE SCHEMA public;"
docker exec postgres psql -U postgres -d postgres -f /tmp/restore.sql

# –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
rm "${TEMP_SQL}"
docker exec postgres rm /tmp/restore.sql

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º n8n
echo -e "${YELLOW}üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º n8n...${NC}"
docker compose up -d n8n

echo ""
echo -e "${GREEN}‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
echo ""
echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ë–î:"
sleep 3
docker exec postgres psql -U postgres -d postgres -c "
SELECT 
  (SELECT COUNT(*) FROM workflow_entity) as workflows,
  (SELECT COUNT(*) FROM credentials_entity) as credentials,
  (SELECT COUNT(*) FROM execution_entity) as executions,
  (SELECT COUNT(*) FROM \"user\") as users;
"

echo ""
echo -e "${GREEN}‚úÖ n8n –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!${NC}"
echo "üåê –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:5678 –∏–ª–∏ https://–≤–∞—à-–¥–æ–º–µ–Ω"

