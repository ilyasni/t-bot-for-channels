{
  "name": "Group Mention Analyzer",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "mention-analyzer",
        "responseMode": "lastNode",
        "options": {}
      },
      "id": "webhook-trigger-mention",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300],
      "webhookId": "mention-analyzer-webhook"
    },
    {
      "parameters": {
        "jsCode": "// Подготовка данных для анализа упоминания\nconst items = $input.all();\nconst data = items[0].json;\n\n// Извлекаем параметры\nconst mentionContext = data.mention_context || [];\nconst mentionedUser = data.mentioned_user;\n\n// Форматируем контекст\nconst contextText = mentionContext.map((msg, idx) => {\n  const isMention = msg.text && msg.text.includes(`@${mentionedUser}`);\n  const prefix = isMention ? \">>> [УПОМИНАНИЕ]\" : \"   \";\n  return `${prefix} ${msg.username}: ${msg.text} (${msg.timestamp})`;\n}).join('\\n');\n\n// Создаем промпт для анализа\nconst analysisPrompt = `Проанализируй контекст упоминания пользователя @${mentionedUser} в группе.\\n\\nКонтекст разговора:\\n${contextText}\\n\\nОпредели:\\n1. О чем разговор (контекст)\\n2. Почему упомянули пользователя (причина)\\n3. Срочность (low/medium/high)\\n4. Ключевые моменты\\n\\nВерни ТОЛЬКО JSON:\\n{\\n  \"context_summary\": \"краткое описание контекста\",\\n  \"mention_reason\": \"почему упомянули\",\\n  \"urgency\": \"low|medium|high\",\\n  \"key_points\": [\"пункт1\", \"пункт2\"]\\n}`;\n\nreturn [\n  {\n    json: {\n      mentioned_user: mentionedUser,\n      context_text: contextText,\n      message_count: mentionContext.length,\n      analysis_prompt: analysisPrompt\n    }\n  }\n];"
      },
      "id": "prepare-mention-prompt",
      "name": "Prepare Mention Prompt",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [450, 300]
    },
    {
      "parameters": {
        "url": "http://gpt2giga-proxy:8090/v1/chat/completions",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "GigaChat"
            },
            {
              "name": "messages",
              "value": "={{[{\"role\": \"system\", \"content\": \"Ты - аналитик контекста. Анализируй причины упоминаний пользователей в диалогах.\"}, {\"role\": \"user\", \"content\": $json.analysis_prompt}]}}"
            },
            {
              "name": "temperature",
              "value": "0.3"
            },
            {
              "name": "max_tokens",
              "value": "400"
            }
          ]
        },
        "options": {
          "timeout": 60000
        }
      },
      "id": "analyze-mention",
      "name": "Analyze Mention Context",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [650, 300]
    },
    {
      "parameters": {
        "jsCode": "// Форматирование результата анализа упоминания\nconst items = $input.all();\nconst analysisResponse = items[0].json.choices?.[0]?.message?.content || '{}';\n\nlet result = {\n  context_summary: \"\",\n  mention_reason: \"\",\n  urgency: \"medium\",\n  key_points: []\n};\n\ntry {\n  // Парсим JSON ответ\n  const parsed = JSON.parse(analysisResponse);\n  result = {\n    context_summary: parsed.context_summary || \"\",\n    mention_reason: parsed.mention_reason || \"\",\n    urgency: parsed.urgency || \"medium\",\n    key_points: parsed.key_points || []\n  };\n} catch (e) {\n  // Fallback: извлекаем JSON из текста\n  const jsonMatch = analysisResponse.match(/\\{[\\s\\S]*\\}/);\n  if (jsonMatch) {\n    try {\n      const parsed = JSON.parse(jsonMatch[0]);\n      result = {\n        context_summary: parsed.context_summary || \"\",\n        mention_reason: parsed.mention_reason || \"\",\n        urgency: parsed.urgency || \"medium\",\n        key_points: parsed.key_points || []\n      };\n    } catch (e2) {\n      // Используем fallback значения\n      result = {\n        context_summary: \"Не удалось проанализировать контекст\",\n        mention_reason: \"Требуется внимание\",\n        urgency: \"medium\",\n        key_points: [\"Проверьте сообщение вручную\"]\n      };\n    }\n  }\n}\n\nreturn [\n  {\n    json: result\n  }\n];"
      },
      "id": "format-mention-response",
      "name": "Format Mention Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [850, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}"
      },
      "id": "respond-mention-webhook",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1050, 300]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Prepare Mention Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Mention Prompt": {
      "main": [
        [
          {
            "node": "Analyze Mention Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze Mention Context": {
      "main": [
        [
          {
            "node": "Format Mention Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Mention Response": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "name": "telegram-groups",
      "id": "telegram-groups-tag"
    },
    {
      "name": "mention-analysis",
      "id": "mention-analysis-tag"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-01-15T00:00:00.000Z",
  "versionId": "1"
}

