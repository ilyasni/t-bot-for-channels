############################################################
# Telegram Channel Parser - Environment Variables
############################################################
#
# ВАЖНО: Этот сервис интегрирован в основной проект.
# Основные переменные (DATABASE_URL, ENCRYPTION_KEY, BOT_TOKEN,
# DEFAULT_RETENTION_DAYS, CLEANUP_SCHEDULE_TIME и др.) 
# должны быть настроены в корневом файле .env проекта.
#
# Для запуска сервиса используйте:
#   python start_services.py (в корне проекта)
#
############################################################

# Parser settings
PARSER_INTERVAL_MINUTES=30
MAX_POSTS_PER_CHANNEL=50

# Server settings
HOST=0.0.0.0
PORT=8010

# Debug Settings
# Включить детальные DEBUG логи для отладки (telegram.ext, telethon, ConversationHandler)
# По умолчанию: false (только INFO, WARNING, ERROR)
# Установите true для детальной диагностики проблем
DEBUG_LOGS=false

# Web Authentication Server settings
AUTH_BASE_URL=https://telegram-auth.produman.studio
# Для разработки можно использовать:
# AUTH_BASE_URL=https://localhost:8000

# ============================================================================
# Tagging Provider Configuration (автоматическое тегирование постов)
# ============================================================================

# Выбор провайдера для тегирования:
# - gigachat: GigaChat через gpt2giga-proxy (ОСНОВНОЙ, рекомендуется: ~10,000 запросов/день)
# - openrouter: OpenRouter API (вспомогательный: 50 запросов/день для free моделей)
TAGGING_PROVIDER=gigachat

# Автоматический fallback на OpenRouter при ошибках GigaChat
TAGGING_FALLBACK_OPENROUTER=true

# OpenRouter настройки (если TAGGING_PROVIDER=openrouter)
OPENROUTER_API_KEY=your_openrouter_api_key_here
# Бесплатные модели (выберите одну):
# OPENROUTER_MODEL=google/gemini-2.0-flash-exp:free (рекомендуется, стабильная)
# OPENROUTER_MODEL=meta-llama/llama-3.2-3b-instruct:free
# OPENROUTER_MODEL=qwen/qwen-2-7b-instruct:free
# OPENROUTER_MODEL=google/gemma-2-9b-it:free
OPENROUTER_MODEL=google/gemini-2.0-flash-exp:free

# GigaChat настройки (если TAGGING_PROVIDER=gigachat)
# Прокси URL настраивается автоматически, если запущен gpt2giga-proxy
# Не требует отдельного API ключа - используется GIGACHAT_CREDENTIALS из корневого .env
GIGACHAT_PROXY_URL=http://gpt2giga-proxy:8090
# Доступные модели: GigaChat-Lite (рекомендуется), GigaChat, GigaChat-Pro
# GigaChat-Lite: быстрая, экономичная, высокие лимиты - идеально для тегирования
GIGACHAT_MODEL=GigaChat-Lite

# Общие настройки тегирования
TAGGING_BATCH_SIZE=10

# Retry настройки для тегирования
TAGGING_MAX_RETRIES=3          # Количество retry при временных ошибках API (502, 503, 504)
TAGGING_RETRY_DELAY=2.0        # Начальная задержка перед retry (секунды, экспоненциально увеличивается)
TAGGING_MAX_ATTEMPTS=5         # Максимальное общее количество попыток для одного поста

# ============================================================================
# Примеры использования:
# ============================================================================
# 
# Случай 1 (РЕКОМЕНДУЕТСЯ): GigaChat Lite + OpenRouter fallback
#   TAGGING_PROVIDER=gigachat
#   GIGACHAT_MODEL=GigaChat-Lite
#   TAGGING_FALLBACK_OPENROUTER=true
#   OPENROUTER_API_KEY=sk-or-v1-...  # для fallback
#   # GIGACHAT_CREDENTIALS должен быть установлен в корневом .env
#
# Случай 2: Только GigaChat (без fallback)
#   TAGGING_PROVIDER=gigachat
#   TAGGING_FALLBACK_OPENROUTER=false
#
# Случай 3: Только OpenRouter (без GigaChat)
#   TAGGING_PROVIDER=openrouter
#   OPENROUTER_API_KEY=sk-or-v1-...
#   OPENROUTER_MODEL=google/gemini-2.0-flash-exp:free
#
# Случай 4: Отключить тегирование
#   # Не устанавливайте ни GigaChat, ни OpenRouter
#
# ============================================================================

############################################################
# RAG Service Configuration
############################################################

# Qdrant Vector Database
QDRANT_API_KEY=

# Embeddings
GIGACHAT_ENABLED=true
EMBEDDING_MAX_TOKENS_GIGACHAT=1536
EMBEDDING_OVERLAP_TOKENS_GIGACHAT=256
EMBEDDING_MAX_TOKENS_FALLBACK=384
EMBEDDING_OVERLAP_TOKENS_FALLBACK=64

# RAG Settings
RAG_TOP_K=10                      # Количество документов для контекста
RAG_MIN_SCORE=0.7                 # Минимальный score для релевантности
RAG_CONTEXT_WINDOW=4000           # Максимальный размер контекста (tokens)
RAG_TEMPERATURE=0.3               # Temperature для генерации

# Digest Settings
DIGEST_DEFAULT_TIME=09:00         # Время отправки по умолчанию
DIGEST_MAX_POSTS=200              # Максимум постов в дайджесте (1-500)
DIGEST_SUMMARY_LENGTH=short       # short, medium, detailed

# AI Digest Configuration
AI_DIGEST_ENABLED=true            # Включить AI-суммаризацию дайджестов
GIGACHAT_MODEL=GigaChat           # GigaChat или GigaChatMAX
DIGEST_AI_TEMPERATURE=0.3         # Temperature для генерации саммари
DIGEST_POSTS_PER_TOPIC=10         # Постов для анализа на каждую тему
QUERY_HISTORY_DAYS=30             # Анализировать запросы за последние N дней

# RAG Service
RAG_SERVICE_URL=http://rag-service:8020
RAG_SERVICE_ENABLED=true

############################################################
# External Services Integration
############################################################

# Qdrant Vector Database
QDRANT_URL=http://qdrant:6333
QDRANT_EXTERNAL_URL=https://qdrant.produman.studio
# QDRANT_API_KEY уже установлен выше

# Redis (Valkey) Cache
REDIS_HOST=redis
REDIS_PORT=6379
# REDIS_PASSWORD=  # Valkey запущен без пароля
REDIS_EMBEDDING_TTL=86400        # 24 hours
REDIS_RAG_QUERY_TTL=3600          # 1 hour

# Searxng (Метапоисковик)
SEARXNG_URL=https://searxng.produman.studio
SEARXNG_USER=hello@ilyasni.com
SEARXNG_PASSWORD=B5Hp8jfp7sjDnb4XwRRzPo54RYETVOhX
SEARXNG_MAX_RESULTS=5
SEARXNG_ENABLED=false             # Опционально для RAG hybrid search

# Crawl4AI (Веб-скрапинг)
CRAWL4AI_URL=http://crawl4ai:11235
CRAWL4AI_TIMEOUT=30
CRAWL4AI_WORD_THRESHOLD=100
CRAWL4AI_ENABLED=false            # Опционально для обогащения постов

# Ollama (Локальные LLM)
OLLAMA_URL=http://ollama:11434
OLLAMA_DEFAULT_MODEL=llama3.2
OLLAMA_TIMEOUT=60
OLLAMA_ENABLED=false              # Опционально для приватной обработки

# Flowise (AI Workflows)
FLOWISE_URL=https://flowise.produman.studio
FLOWISE_ENABLED=false             # Опционально для кастомных workflows

############################################################
# n8n/Flowise Webhook Configuration
############################################################

# Webhooks для событий (опционально)
WEBHOOK_NEW_POST=                 # n8n webhook URL для новых постов
WEBHOOK_POST_TAGGED=              # n8n webhook URL для тегированных постов
WEBHOOK_POST_INDEXED=             # n8n webhook URL для индексированных постов
WEBHOOK_DIGEST_SENT=              # n8n webhook URL для отправленных дайджестов
WEBHOOK_ENABLED=false

############################################################
# Shared Master Credentials (упрощенная авторизация)
############################################################
# Создайте приложение на https://my.telegram.org и скопируйте credentials
MASTER_API_ID=12345678
MASTER_API_HASH=abcdef1234567890abcdef1234567890

# Администраторы (telegram_id через запятую)
# Первый ID будет автоматически назначен администратором при миграции
ADMIN_TELEGRAM_IDS=123456789,987654321

# Режим регистрации: invite (через инвайт коды) или open (открытая)
REGISTRATION_MODE=invite

# Подписки - настройки по умолчанию
DEFAULT_SUBSCRIPTION=free
DEFAULT_MAX_CHANNELS=3
TRIAL_DURATION_DAYS=7

############################################################
# Groups Integration (n8n Multi-Agent Workflows)
############################################################

# n8n Webhook URLs для анализа групп
N8N_GROUP_DIGEST_WEBHOOK=http://n8n:5678/webhook/group-digest
N8N_MENTION_ANALYZER_WEBHOOK=http://n8n:5678/webhook/mention-analyzer

# Timeouts для n8n workflows (секунды)
N8N_DIGEST_TIMEOUT=120    # Timeout для дайджеста (2 минуты)
N8N_MENTION_TIMEOUT=60    # Timeout для анализа упоминания (1 минута)

# Лимиты для дайджестов
DIGEST_MAX_MESSAGES=200   # Максимум сообщений для анализа

############################################################
# Переменные из корневого .env проекта:
############################################################
# BOT_TOKEN - токен Telegram бота (получить у @BotFather)
# TELEGRAM_DATABASE_URL - URL базы данных
#   По умолчанию: sqlite:///./telethon/data/telethon_bot.db
#   Для PostgreSQL: postgresql://postgres:password@db:5432/postgres
# ENCRYPTION_KEY - используется общий ключ из корневого .env
# POSTGRES_PASSWORD - для подключения к Supabase (если используется)
# DEFAULT_RETENTION_DAYS - период хранения постов (по умолчанию 30 дней)
# CLEANUP_SCHEDULE_TIME - время ежедневной очистки (формат HH:MM, по умолчанию 03:00)
# OPENROUTER_API_KEY - ключ OpenRouter API для тегирования и RAG
# GIGACHAT_CREDENTIALS - ключ GigaChat API для embeddings (через gpt2giga)
############################################################
