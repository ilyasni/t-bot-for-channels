#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π Telegram.
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –µ—Å–ª–∏ Telegram –±–ª–æ–∫–∏—Ä—É–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é.
"""

import os
import sys
import asyncio
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from auth import clear_all_sessions
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def main():
    """–û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π"""
    try:
        logger.info("üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π...")
        
        # –û—á–∏—â–∞–µ–º –≤—Å–µ —Å–µ—Å—Å–∏–∏
        result = await clear_all_sessions()
        
        if result:
            logger.info("‚úÖ –í—Å–µ —Å–µ—Å—Å–∏–∏ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã!")
            logger.info("üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ")
        else:
            logger.error("‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Å–µ—Å—Å–∏–π")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        sys.exit(1)

if __name__ == "__main__":
    print("üßπ –û—á–∏—Å—Ç–∫–∞ —Å–µ—Å—Å–∏–π Telegram...")
    print("=" * 50)
    asyncio.run(main())
