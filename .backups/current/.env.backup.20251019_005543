##### Change the name of this file to .env after updating it!

############
# [required]
# flowise credentials - you set this to whatever you want, just make it a long and secure string for both!
############

FLOWISE_USERNAME=
FLOWISE_PASSWORD=


############
# [required]
# n8n credentials - you set this to whatever you want, just make it a long and secure string for both!
############

N8N_ENCRYPTION_KEY=FF_2mLTx1uxRz81ns6kHctmlcqAQkSe39ye5jewsDKM=
N8N_USER_MANAGEMENT_JWT_SECRET=


############
# [required]
# grafana credentials - you set this to whatever you want, just make it a long and secure string for both!
############

GRAFANA_ADMIN_PASSWORD=


############
# [required]
# prometheus credentials - you set this to whatever you want, just make it a long and secure string for both!
############

PROMETHEUS_USERNAME=
PROMETHEUS_PASSWORD=


############
# [required]
# searxng credentials - you set this to whatever you want, just make it a long and secure string for both!
############

SEARXNG_USERNAME=
SEARXNG_PASSWORD=


############
# [required]
# Supabase Secrets

# YOU MUST CHANGE THESE BEFORE GOING INTO PRODUCTION
# Read these docs for any help: https://supabase.com/docs/guides/self-hosting/docker
# For the JWT Secret and keys, see: https://supabase.com/docs/guides/self-hosting/docker#generate-api-keys
# For the other secrets, see: https://supabase.com/docs/guides/self-hosting/docker#update-secrets
# You can really decide any value for POOLER_TENANT_ID like 1000.

# Note that using special symbols (like '%') can complicate things a bit for your Postgres password.
# If you use special symbols in your Postgres password, you must remember to percent-encode your password later if using the Postgres connection string, for example, postgresql://postgres.projectref:p%3Dword@aws-0-us-east-1.pooler.supabase.com:6543/postgres
############

POSTGRES_PASSWORD=
JWT_SECRET=
ANON_KEY=
SERVICE_ROLE_KEY=
DASHBOARD_USERNAME=
DASHBOARD_PASSWORD=
POOLER_TENANT_ID=1000


############
# [required] 
# Weaviate username and password
############

WEAVIATE_USERNAME=
WEAVIATE_API_KEY=


############
# [required]
# Qdrant API Key
############
QDRANT_API_KEY=


############
# [required]
# Neo4j username and password
############

NEO4J_AUTH_USERNAME=neo4j
NEO4J_AUTH_PASSWORD=


############
# [required]
# Langfuse credentials + Project-wide encryption key
# Each of the secret keys you can set to whatever you want, just make it secure!
# For the encryption key, use the command `openssl rand -hex 32`
#   openssl is available by defualt on Linux/Mac
#   For Windows, you can use the 'Git Bash' terminal installed with git
#
# IMPORTANT: ENCRYPTION_KEY is used by both Langfuse and Telegram Parser
#   - Langfuse: encrypts sensitive data in Langfuse
#   - Telegram Parser: encrypts user API credentials (API_ID, API_HASH, PHONE)
#   DO NOT CHANGE this key after you start using it!
############

CLICKHOUSE_PASSWORD=
MINIO_ROOT_PASSWORD=
LANGFUSE_SALT=
NEXTAUTH_SECRET=
ENCRYPTION_KEY=FF_2mLTx1uxRz81ns6kHctmlcqAQkSe39ye5jewsDKM=
LANGFUSE_INIT_PROJECT_PUBLIC_KEY=
LANGFUSE_INIT_PROJECT_SECRET_KEY=
LANGFUSE_INIT_USER_EMAIL=
LANGFUSE_INIT_USER_PASSWORD=

############
# [required for prod]
# Caddy Config

# By default listen on https://localhost:[service port] and don't use an email for SSL
# To change this for production:
# Uncomment all of these environment variables for the services you want exposed
# Note that you might not want to expose Ollama or SearXNG since they aren't secured by default
# Replace the placeholder value with the host for each service (like n8n.yourdomain.com)
# Replace internal by your email (require to create a Let's Encrypt certificate)
############

USER_DOMAIN_NAME=
N8N_HOSTNAME=n8n.yourdomain.com
WEBUI_HOSTNAME=webui.yourdomain.com
FLOWISE_HOSTNAME=flowise.yourdomain.com
SUPABASE_HOSTNAME=supabase.yourdomain.com
LANGFUSE_HOSTNAME=langfuse.yourdomain.com
SEARXNG_HOSTNAME=searxng.yourdomain.com
WEAVIATE_HOSTNAME=weaviate.yourdomain.com
NEO4J_HOSTNAME=neo4j.yourdomain.com
GRAFANA_HOSTNAME=grafana.yourdomain.com
PROMETHEUS_HOSTNAME=prometheus.yourdomain.com
LETTA_HOSTNAME=letta.yourdomain.com
QDRANT_HOSTNAME=qdrant.yourdomain.com
TELEGRAM_AUTH_HOSTNAME=telegram-auth.yourdomain.com
LETSENCRYPT_EMAIL=

# Everything below this point is optional.
# Default values will suffice unless you need more features/customization.

RUN_N8N_IMPORT=

   #
   #
#######
 #####
   #

############
# Optional Google Authentication for Supabase
# Get these values from the Google Admin Console
############
# ENABLE_GOOGLE_SIGNUP=true
# GOOGLE_CLIENT_ID=
# GOOGLE_CLIENT_SECRET=
# GOOGLE_REDIRECT_URI=

############
# Optional SearXNG Config
# If you run a very small or a very large instance, you might want to change the amount of used uwsgi workers and threads per worker
# More workers (= processes) means that more search requests can be handled at the same time, but it also causes more resource usage
############

# SEARXNG_UWSGI_WORKERS=4
# SEARXNG_UWSGI_THREADS=4

############
# Database - You can change these to any PostgreSQL database that has logical replication enabled.
############

POSTGRES_HOST=db
POSTGRES_DB=postgres
POSTGRES_PORT=5432
# default user is postgres
POSTGRES_USER=postgres

############
# Supavisor -- Database pooler and others that can be left as default values
############
POOLER_PROXY_PORT_TRANSACTION=6543
POOLER_DEFAULT_POOL_SIZE=20
POOLER_MAX_CLIENT_CONN=100
SECRET_KEY_BASE=
VAULT_ENC_KEY=
# Pool size for internal metadata storage used by Supavisor
# This is separate from client connections and used only by Supavisor itself
POOLER_DB_POOL_SIZE=5


############
# API Proxy - Configuration for the Kong Reverse proxy.
############

KONG_HTTP_PORT=8000
KONG_HTTPS_PORT=8443


############
# API - Configuration for PostgREST.
############

PGRST_DB_SCHEMAS=public,storage,graphql_public


############
# Auth - Configuration for the GoTrue authentication server.
############

## General
SITE_URL=http://localhost:3000
ADDITIONAL_REDIRECT_URLS=
JWT_EXPIRY=3600
DISABLE_SIGNUP=false
API_EXTERNAL_URL=http://localhost:8000

## Mailer Config
MAILER_URLPATHS_CONFIRMATION="/auth/v1/verify"
MAILER_URLPATHS_INVITE="/auth/v1/verify"
MAILER_URLPATHS_RECOVERY="/auth/v1/verify"
MAILER_URLPATHS_EMAIL_CHANGE="/auth/v1/verify"

## Email auth
ENABLE_EMAIL_SIGNUP=true
ENABLE_EMAIL_AUTOCONFIRM=true
SMTP_ADMIN_EMAIL=admin@example.com
SMTP_HOST=supabase-mail
SMTP_PORT=2500
SMTP_USER=fake_mail_user
SMTP_PASS=fake_mail_password
SMTP_SENDER_NAME=fake_sender
ENABLE_ANONYMOUS_USERS=false

## Phone auth
ENABLE_PHONE_SIGNUP=true
ENABLE_PHONE_AUTOCONFIRM=true


############
# Studio - Configuration for the Dashboard
############

STUDIO_DEFAULT_ORGANIZATION=Organization
STUDIO_DEFAULT_PROJECT=Project

STUDIO_PORT=3000
# replace if you intend to use Studio outside of localhost
SUPABASE_PUBLIC_URL=http://localhost:8000

# Enable webp support
IMGPROXY_ENABLE_WEBP_DETECTION=true

# Add your OpenAI API key to enable SQL Editor Assistant
OPENAI_API_KEY=


############
# Functions - Configuration for Functions
############
# NOTE: VERIFY_JWT applies to all functions. Per-function VERIFY_JWT is not supported yet.
FUNCTIONS_VERIFY_JWT=false


############
# Logs - Configuration for Analytics
# Please refer to https://supabase.com/docs/reference/self-hosting-analytics/introduction
############

# Change vector.toml sinks to reflect this change
# these cannot be the same value
LOGFLARE_PUBLIC_ACCESS_TOKEN="not-in-use"
LOGFLARE_PRIVATE_ACCESS_TOKEN="not-in-use"

# Docker socket location - this value will differ depending on your OS
DOCKER_SOCKET_LOCATION=/var/run/docker.sock

# Google Cloud Project details
GOOGLE_PROJECT_ID=GOOGLE_PROJECT_ID
GOOGLE_PROJECT_NUMBER=GOOGLE_PROJECT_NUMBER

# Letta
LETTA_SERVER_PASSWORD=

# Langsmith
LANGCHAIN_ENDPOINT=https://api.smith.langchain.com
LANGCHAIN_TRACING_V2=true
LANGCHAIN_API_KEY=

###########################################################################################
# Telegram Channel Parser Settings
###########################################################################################

############
# [required for Telegram Parser]
# Database (ВАЖНО: используйте только PostgreSQL для продакшна!)
############

# ВАЖНО: После запуска Supabase используйте PostgreSQL:
TELEGRAM_DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/postgres

# Для разработки можно использовать SQLite (НЕ для продакшна!):
# TELEGRAM_DATABASE_URL=sqlite:///./telethon/data/telethon_bot.db

############
# [required]
# Telegram Bot Configuration
############

# Get from @BotFather on Telegram
BOT_TOKEN=7914772496:AAHpXmBltWg1XztwwyCXSs5mc7kvvkTdwPw

# Parser settings
PARSER_INTERVAL_MINUTES=30
MAX_POSTS_PER_CHANNEL=50

# Server configuration
HOST=0.0.0.0
PORT=8010
AUTH_BASE_URL=https://telegram-auth.produman.studio

############
# [required for AI Tagging]
# AI Provider API Keys (choose one or both)
############

# OpenRouter (бесплатные модели)
OPENROUTER_API_KEY=
OPENROUTER_MODEL=google/gemini-2.0-flash-exp:free

# GigaChat (Sber AI) - через GPT2Giga proxy
# Если используете GigaChat, настройте GIGACHAT_CREDENTIALS ниже

############
# [required for AI Tagging]
# AI Tagging Configuration
############

TAGGING_ENABLED=true
TAGGING_PROVIDER=openrouter
# Альтернативно: TAGGING_PROVIDER=gigachat
TAGGING_BATCH_SIZE=10
TAGGING_MAX_RETRIES=3
TAGGING_RETRY_DELAY=2.0

############
# [optional]
# Post Retention (автоочистка старых постов)
############

DEFAULT_RETENTION_DAYS=30
CLEANUP_SCHEDULE_TIME=03:00
RETENTION_ENABLED=true

############
# [optional]
# RAG Service Configuration
############

# Qdrant connection (используется для векторного поиска)
QDRANT_URL=http://qdrant:6333
QDRANT_API_KEY=${QDRANT_API_KEY}

# Redis/Valkey (кеширование embeddings)
REDIS_HOST=redis
REDIS_PORT=6379
# REDIS_PASSWORD не требуется для Valkey по умолчанию

# RAG model settings
RAG_EMBEDDINGS_PROVIDER=gigachat
# Альтернативно: RAG_EMBEDDINGS_PROVIDER=openai
RAG_EMBEDDINGS_MODEL=EmbeddingsGigaR
RAG_LLM_PROVIDER=gigachat
RAG_LLM_MODEL=GigaChat

# RAG search parameters
RAG_TOP_K=10
RAG_MIN_SCORE=0.7
RAG_MAX_CONTEXT_TOKENS=4000

############
# [optional]
# Webhooks для интеграции с n8n/Flowise
############

WEBHOOK_NEW_POST=
WEBHOOK_POST_TAGGED=
WEBHOOK_POST_INDEXED=
WEBHOOK_DIGEST_SENT=

###########################################################################################
# GPT2Giga Proxy Settings
# Provides OpenAI-compatible API proxy for GigaChat (Sber AI)
# Get your credentials at: https://developers.sber.ru/gigachat
###########################################################################################

############
# [required if using GigaChat]
# Single API key (base64-encoded credentials)
############

GIGACHAT_CREDENTIALS=

############
# [optional]
# GigaChat Proxy Configuration
############

GIGACHAT_SCOPE=GIGACHAT_API_PERS
GIGACHAT_MODEL=GigaChat
GIGACHAT_TIMEOUT=120

# Proxy settings (if needed)
HTTP_PROXY=
HTTPS_PROXY=

###########################################################################################
COMPOSE_PROFILES="n8n,flowise,monitoring"
PROMETHEUS_PASSWORD_HASH=
SEARXNG_PASSWORD_HASH=

############
# Observability (Langfuse + Prometheus + Grafana)
############

# Langfuse AI Tracing
LANGFUSE_ENABLED=true
LANGFUSE_PUBLIC_KEY=
LANGFUSE_SECRET_KEY=
LANGFUSE_HOST=https://langfuse.produman.studio

# Prometheus Metrics
PROMETHEUS_METRICS_ENABLED=true

############
# Telegram Bot Configuration
############

# Telegram Bot Token (from @BotFather)
BOT_TOKEN=7914772496:AAHpXmBltWg1XztwwyCXSs5mc7kvvkTdwPw

# Telegram API credentials (from https://my.telegram.org)
MASTER_API_ID=9602513
MASTER_API_HASH=d72f161ad90794db968e19cc24e77efa

# Security
ENCRYPTION_KEY=FF_2mLTx1uxRz81ns6kHctmlcqAQkSe39ye5jewsDKM=

# Логирование входящих updates от Telegram Bot API
# По умолчанию: false (логирование отключено)
# Установите true для логирования всех входящих updates в читабельном формате
LOG_INCOMING_UPDATES=false

# ============================================================================
# Evaluation System Settings
# ============================================================================

# Evaluation metrics через Prometheus
# По умолчанию: true (метрики включены)
# Установите false для отключения evaluation метрик
EVALUATION_METRICS_ENABLED=true

# Langfuse URL для evaluation integration
# По умолчанию: http://localhost:3000
# Используется для создания ссылок на evaluation results
LANGFUSE_URL=http://localhost:3000

# Evaluation timeout settings
# Timeout для одного evaluation item (в секундах)
EVALUATION_ITEM_TIMEOUT=300

# Количество параллельных workers для evaluation
EVALUATION_PARALLEL_WORKERS=4

# Evaluation model defaults
# Провайдер модели по умолчанию для evaluation
EVALUATION_DEFAULT_MODEL_PROVIDER=openrouter

# Модель по умолчанию для evaluation
EVALUATION_DEFAULT_MODEL_NAME=gpt-4o-mini

############
# LangChain Direct Integration
############

# Feature flag для переключения между n8n и LangChain
USE_LANGCHAIN_DIRECT=false

# LangChain GigaChat настройки
GIGACHAT_BASE_URL=http://gpt2giga-proxy:8090/v1
GIGACHAT_TIMEOUT=60.0

# n8n fallback настройки (если USE_LANGCHAIN_DIRECT=false)
N8N_GROUP_DIGEST_WEBHOOK=http://n8n:5678/webhook/group-digest
N8N_GROUP_DIGEST_WEBHOOK_V2=http://n8n:5678/webhook/group-digest-v2
N8N_DIGEST_TIMEOUT=120
N8N_DIGEST_TIMEOUT_V2=180

# Performance settings
DIGEST_MAX_MESSAGES=200

############
# Neo4j Knowledge Graph
############

# Neo4j Connection
NEO4J_ENABLED=true
NEO4J_URI=bolt://neo4j:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=

# Neo4j Auto-indexing (автоматически для новых постов)
NEO4J_AUTO_INDEX=true

# Neo4j Configuration
NEO4J_ENABLED=true
NEO4J_URI=bolt://neo4j:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=password123

# Qdrant Configuration  
QDRANT_URL=http://qdrant:6333
QDRANT_API_KEY=your_qdrant_api_key_here

# PostgreSQL Configuration
POSTGRES_PASSWORD=xiNmSysbbcqTOWT4eb1KkQtM2fb8X7Ms

# Other required variables
N8N_ENCRYPTION_KEY=your_n8n_encryption_key_here
N8N_USER_MANAGEMENT_JWT_SECRET=your_n8n_jwt_secret_here
GRAFANA_ADMIN_PASSWORD=admin123
PROMETHEUS_USERNAME=admin
PROMETHEUS_PASSWORD=prometheus123
SEARXNG_USERNAME=admin
SEARXNG_PASSWORD=searxng123

