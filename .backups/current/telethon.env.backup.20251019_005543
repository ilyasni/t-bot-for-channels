
# Parser settings
PARSER_INTERVAL_MINUTES=30
MAX_POSTS_PER_CHANNEL=50

# Server settings
HOST=0.0.0.0
PORT=8010

# Debug Settings
# Включить детальные DEBUG логи для отладки (telegram.ext, telethon, ConversationHandler)
# По умолчанию: false (только INFO, WARNING, ERROR)
# Установите true для детальной диагностики проблем
DEBUG_LOGS=false

# Docker settings
# Для запуска в Docker оставьте настройки по умолчанию 

# Web Authentication Server settings
AUTH_BASE_URL=https://telegram-auth.produman.studio
# Для разработки можно использовать:
# AUTH_BASE_URL=https://localhost:8000


# SSL Certificate settings (для продакшена)
# SSL_CERT_PATH=/path/to/your/certificate.crt
# SSL_KEY_PATH=/path/to/your/private.key

# ============================================================================
# Tagging Provider Configuration (автоматическое тегирование постов)
# ============================================================================

# Выбор провайдера для тегирования:
# - gigachat: GigaChat через gpt2giga-proxy (ОСНОВНОЙ, рекомендуется: ~10,000 запросов/день)
# - openrouter: OpenRouter API (вспомогательный: 50 запросов/день для free моделей)
TAGGING_PROVIDER=gigachat

# Автоматический fallback на OpenRouter при ошибках GigaChat
TAGGING_FALLBACK_OPENROUTER=true

# OpenRouter AI settings (для автоматического тегирования постов)
OPENROUTER_API_KEY=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
# Бесплатные модели (выберите одну):
# OPENROUTER_MODEL=google/gemini-2.0-flash-exp:free
# OPENROUTER_MODEL=meta-llama/llama-3.2-3b-instruct:free
# OPENROUTER_MODEL=qwen/qwen-2-7b-instruct:free
OPENROUTER_MODEL=qwen/qwen-2.5-72b-instruct:free
TAGGING_BATCH_SIZE=10

# GigaChat настройки (если TAGGING_PROVIDER=gigachat)
# Прокси URL настраивается автоматически, если запущен gpt2giga-proxy
# Не требует отдельного API ключа - используется GIGACHAT_CREDENTIALS из корневого .env
GIGACHAT_PROXY_URL=http://gpt2giga-proxy:8090
# Доступные модели: GigaChat-Lite (рекомендуется), GigaChat, GigaChat-Pro
# GigaChat-Lite: быстрая, экономичная, высокие лимиты - идеально для тегирования
GIGACHAT_MODEL=GigaChat

# Retry настройки для тегирования
TAGGING_MAX_RETRIES=3          # Количество retry при временных ошибках API (502, 503, 504)
TAGGING_RETRY_DELAY=2.0        # Начальная задержка перед retry (секунды, экспоненциально увеличивается)
TAGGING_MAX_ATTEMPTS=5         # Максимальное общее количество попыток для одного поста

############################################################
# RAG Service Configuration
############################################################

# Qdrant Vector Database
QDRANT_API_KEY=HY56smNEHTbE2ogKJEl6qHAGabP2eFycteeVkvKfdTZ7uoI7

# Embeddings
GIGACHAT_ENABLED=true
EMBEDDING_MAX_TOKENS_GIGACHAT=1536
EMBEDDING_OVERLAP_TOKENS_GIGACHAT=256
EMBEDDING_MAX_TOKENS_FALLBACK=384
EMBEDDING_OVERLAP_TOKENS_FALLBACK=64

# RAG Settings
RAG_TOP_K=10                      # Количество документов для контекста
RAG_MIN_SCORE=0.7                 # Минимальный score для релевантности
RAG_CONTEXT_WINDOW=4000           # Максимальный размер контекста (tokens)
RAG_TEMPERATURE=0.3               # Temperature для генерации

# Digest Settings
DIGEST_DEFAULT_TIME=09:00         # Время отправки по умолчанию
DIGEST_MAX_POSTS=200               # Максимум постов в дайджесте
DIGEST_SUMMARY_LENGTH=short       # short, medium, detailed

# RAG Service
RAG_SERVICE_URL=http://rag-service:8020
RAG_SERVICE_ENABLED=true

############################################################
# External Services Integration
############################################################

# Qdrant Vector Database
QDRANT_URL=http://qdrant:6333
QDRANT_EXTERNAL_URL=https://qdrant.produman.studio

# Redis (Valkey) Cache
REDIS_HOST=redis
REDIS_PORT=6379
# REDIS_PASSWORD=  # Valkey без пароля
REDIS_EMBEDDING_TTL=86400        # 24 hours
REDIS_RAG_QUERY_TTL=3600          # 1 hour

# Searxng (Метапоисковик)
SEARXNG_URL=http://searxng:8080
SEARXNG_USER=hello@ilyasni.com
SEARXNG_PASSWORD=B5Hp8jfp7sjDnb4XwRRzPo54RYETVOhX
SEARXNG_MAX_RESULTS=5
SEARXNG_ENABLED=true             # Опционально для RAG hybrid search

# Crawl4AI (Веб-скрапинг)

# Ollama (Локальные LLM)
OLLAMA_URL=http://ollama:11434
OLLAMA_DEFAULT_MODEL=llama3.2
OLLAMA_TIMEOUT=60
OLLAMA_ENABLED=true              # Опционально для приватной обработки

# Flowise (AI Workflows)
FLOWISE_URL=https://flowise.produman.studio
FLOWISE_ENABLED=false             # Опционально для кастомных workflows

############################################################
# Shared Master Credentials (упрощенная авторизация)
############################################################
# Создайте приложение на https://my.telegram.org и скопируйте credentials
# MASTER_API_ID=182419
# MASTER_API_HASH=14635a2abe7976a75cdc5c788df918e3

MASTER_API_ID=9602513
MASTER_API_HASH=d72f161ad90794db968e19cc24e77efa

# Администраторы (telegram_id через запятую)
# Первый ID будет автоматически назначен администратором при миграции
ADMIN_TELEGRAM_IDS=8124731874,139883458

# Режим регистрации: invite (через инвайт коды) или open (открытая)
REGISTRATION_MODE=invite

# Подписки - настройки по умолчанию
DEFAULT_SUBSCRIPTION=free
DEFAULT_MAX_CHANNELS=3
TRIAL_DURATION_DAYS=7

N8N_GROUP_DIGEST_WEBHOOK=http://n8n:5678/webhook/group-digest
N8N_MENTION_ANALYZER_WEBHOOK=http://n8n:5678/webhook/mention-analyzer

# n8n Webhook URL для AI-классификации голосовых команд
N8N_WEBHOOK_URL=http://n8n:5678


# Timeouts для n8n workflows (секунды)
N8N_DIGEST_TIMEOUT=120    # Timeout для дайджеста (2 минуты)
N8N_MENTION_TIMEOUT=60    # Timeout для анализа упоминания (1 минута)

# Лимиты для дайджестов
DIGEST_MAX_MESSAGES=200   # Максимум сообщений для анализа

############################################################
# SaluteSpeech API Configuration (Voice Transcription)
############################################################
# Получите credentials в https://developers.sber.ru/studio
# Документация: https://developers.sber.ru/docs/ru/salutespeech/overview

# SaluteSpeech API credentials
SALUTESPEECH_CLIENT_ID=0199deda-86df-7467-b2be-7f3d6d12541b
SALUTESPEECH_CLIENT_SECRET=d944b976-a759-4fc8-8297-13258aa37a82
SALUTESPEECH_SCOPE=SALUTE_SPEECH_PERS
SALUTESPEECH_URL=https://smartspeech.sber.ru/rest/v1

# Voice transcription settings
VOICE_TRANSCRIPTION_ENABLED=true
VOICE_MAX_DURATION_SEC=60     # Максимальная длительность голосового (60 секунд)
VOICE_CACHE_TTL=86400         # Кеш транскрипций (24 часа)

# Voice AI Classifier (n8n)
VOICE_AI_CLASSIFIER_ENABLED=true  # AI-классификация голосовых команд через n8n


# ВАЖНО: Голосовые команды доступны только для Premium/Enterprise подписок
# Free/Basic tier: voice_transcription_enabled=false
# Trial: 20 голосовых запросов в день
# Premium: 50 голосовых запросов в день
# Enterprise: 999 голосовых запросов в день

############################################################
# Переменные из корневого .env проекта:
############################################################
# BOT_TOKEN - токен Telegram бота (получить у @BotFather)
# TELEGRAM_DATABASE_URL - URL базы данных
#   По умолчанию: sqlite:///./telethon/data/telethon_bot.db
#   Для PostgreSQL: postgresql://postgres:password@db:5432/postgres
# ENCRYPTION_KEY - используется общий ключ из корневого .env
# POSTGRES_PASSWORD - для подключения к Supabase (если используется)
# DEFAULT_RETENTION_DAYS - период хранения постов (по умолчанию 30 дней)
# CLEANUP_SCHEDULE_TIME - время ежедневной очистки (формат HH:MM, по умолчанию 03:00)
# OPENROUTER_API_KEY - ключ OpenRouter API для тегирования и RAG
# GIGACHAT_CREDENTIALS - ключ GigaChat API для embeddings (через gpt2giga)
############################################################

# Voice AI Classifier (n8n)
VOICE_AI_CLASSIFIER_ENABLED=true  # AI-классификация голосовых команд через n8n

# n8n Webhook URL для AI-классификации голосовых команд
N8N_WEBHOOK_URL=http://n8n:5678

# Crawl4AI Web Content Enrichment
CRAWL4AI_ENABLED=true
CRAWL4AI_URL=http://crawl4ai:11235
CRAWL4AI_WORD_THRESHOLD=100
CRAWL4AI_TIMEOUT=30

# Включить Neo4j integration
NEO4J_ENABLED=true

# Neo4j connection (внутренний Docker)
NEO4J_ENABLED=true
NEO4J_URI=bolt://neo4j:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=5L0Dp8GyQie19RBdhQTYFL5BLgcpDBau

# Автоиндексация постов в граф (при парсинге)
NEO4J_AUTO_INDEX=true

############################################################
# Data Retention & Cleanup (NEW)
############################################################
# Автоматическая очистка старых данных из PostgreSQL, Neo4j, Qdrant

# Retention period в днях (посты старше удаляются)
DATA_RETENTION_DAYS=120

# Включить автоматический cleanup scheduler
CLEANUP_ENABLED=true

# Расписание cleanup (cron format)
# Default: 0 3 * * * = каждый день в 3:00 AM
CLEANUP_SCHEDULE=0 3 * * *

############################################################
# Hybrid Search Configuration (NEW)
############################################################
# Graph-enhanced RAG search (Qdrant + Neo4j)

# Вес graph score в combined ranking (0.0-1.0)
# 0.3 = 70% vector similarity + 30% graph signals
GRAPH_WEIGHT=0.3

# Включить graph expansion (расширение контекста через граф)
ENABLE_GRAPH_EXPANSION=true

############################################################
# Feature Flags для A/B Testing (NEW)
############################################################
# Постепенный rollout новых фич

# Hybrid Search (Qdrant + Neo4j)
USE_HYBRID_SEARCH=false
HYBRID_SEARCH_PERCENTAGE=10  # 10% пользователей

# Query Expansion (расширение запросов через tag relationships)
USE_QUERY_EXPANSION=false
QUERY_EXPANSION_PERCENTAGE=0  # 0% = disabled
QUERY_EXPANSION_MAX_TERMS=3

############################################################
# Graph Cache Configuration (NEW)
############################################################
# Redis cache для Neo4j graph queries (опционально)

# Включить кеширование
GRAPH_CACHE_ENABLED=true

# TTL для cache keys (в секундах)
GRAPH_CACHE_USER_INTERESTS_TTL=3600      # 1 hour
GRAPH_CACHE_TRENDING_TTL=21600           # 6 hours
GRAPH_CACHE_POST_CONTEXT_TTL=86400       # 24 hours

############################################################
# Admin API (NEW)
############################################################
# Защита admin endpoints (manual cleanup, metrics, etc)

# Admin API Key (генерировать: openssl rand -hex 32)
ADMIN_API_KEY=e76155528d5f55ac1e736690791ad917d5bd02272d70c09d330634ae2a1db37d
LOG_INCOMING_UPDATES=true

# LangChain Integration Settings
USE_LANGCHAIN_DIRECT=true
USE_DIGEST_V2=true
GIGACHAT_BASE_URL=http://localhost:8090/v1
GIGACHAT_TIMEOUT=60

# Evaluation System Settings
EVALUATION_ENABLED=true
EVALUATION_SAMPLE_RATE=1.0
