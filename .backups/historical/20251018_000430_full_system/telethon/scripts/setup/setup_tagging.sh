#!/bin/bash
# –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º—ã —Ç–µ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è Docker –æ–∫—Ä—É–∂–µ–Ω–∏—è

set -e

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∫—Ä–∏–ø—Ç–∞ –∏ –ø—Ä–æ–µ–∫—Ç–∞
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"

COMPOSE_CMD="docker compose -p localai -f docker-compose.override.yml"
TELETHON_CONTAINER="telethon"

echo "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"
echo "================================================="
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ telethon
if [ ! -f "$SCRIPT_DIR/.env" ]; then
    echo "‚ùå –§–∞–π–ª telethon/.env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.example –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ:"
    echo "   cd $SCRIPT_DIR"
    echo "   cp .env.example .env"
    echo "   # –î–æ–±–∞–≤—å—Ç–µ OPENROUTER_API_KEY –≤ .env"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è OPENROUTER_API_KEY
if ! grep -q "OPENROUTER_API_KEY=.*[^_].*" "$SCRIPT_DIR/.env"; then
    echo "‚ö†Ô∏è  OPENROUTER_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ telethon/.env"
    echo "üìã –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á –Ω–∞ https://openrouter.ai/"
    echo "   –∏ –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ $SCRIPT_DIR/.env"
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ API –∫–ª—é—á–∞? (y/N) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

echo "üì¶ –®–∞–≥ 1: –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ Docker –æ–±—Ä–∞–∑–∞..."
cd "$PROJECT_ROOT"
$COMPOSE_CMD up --build -d telethon
echo "‚úÖ –û–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω –∏ –∑–∞–ø—É—â–µ–Ω"
echo ""

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (10 —Å–µ–∫—É–Ω–¥)..."
sleep 10
echo ""

echo "üóÑÔ∏è  –®–∞–≥ 2: –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
docker exec telethon python add_tags_column.py

if [ $? -eq 0 ]; then
    echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏"
    echo "üìã –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Ä—É—á–Ω—É—é:"
    echo "   docker exec telethon python add_tags_column.py"
    exit 1
fi
echo ""

echo "üîÑ –®–∞–≥ 3: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
docker restart telethon
docker restart telethon-bot 2>/dev/null || echo "‚ÑπÔ∏è  telethon-bot –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞"
echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã"
echo ""

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ (5 —Å–µ–∫—É–Ω–¥)..."
sleep 5
echo ""

echo "üîç –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã..."
if curl -s http://localhost:8010/posts/tags/stats > /dev/null; then
    echo "‚úÖ API –æ—Ç–≤–µ—á–∞–µ—Ç"
    echo ""
    echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–µ–≥–∞–º:"
    curl -s http://localhost:8010/posts/tags/stats | python3 -m json.tool 2>/dev/null || echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ jq –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞: apt install jq"
else
    echo "‚ö†Ô∏è  API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    echo "   docker logs telethon"
fi
echo ""

echo "================================================="
echo "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo ""
echo "–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:"
echo "  docker logs telethon -f | grep TaggingService"
echo ""
echo "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–µ–≥–∞–º:"
echo "  curl http://localhost:8010/posts/tags/stats | jq"
echo ""
echo "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–≥–æ–≤ –≤—Ä—É—á–Ω—É—é:"
echo "  curl -X POST http://localhost:8010/posts/{post_id}/generate_tags"
echo ""
echo "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
echo "  cat telethon/TAGGING_README.md"
echo ""