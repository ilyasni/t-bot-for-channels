from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from sqlalchemy.ext.declarative import declarative_base
import os
import logging
from dotenv import load_dotenv

load_dotenv()

logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö - –¢–û–õ–¨–ö–û PostgreSQL (Supabase)
DATABASE_URL = os.getenv("TELEGRAM_DATABASE_URL")

if not DATABASE_URL:
    raise ValueError(
        "‚ùå TELEGRAM_DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n"
        "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤ .env:\n"
        "TELEGRAM_DATABASE_URL=postgresql://postgres:password@supabase-db:5432/postgres?sslmode=disable"
    )

if not DATABASE_URL.startswith("postgresql://"):
    raise ValueError(
        f"‚ùå –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ PostgreSQL!\n"
        f"–¢–µ–∫—É—â–∏–π DATABASE_URL: {DATABASE_URL}\n"
        f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: postgresql://..."
    )

logger.info(f"üìä Database: PostgreSQL (Supabase)")

engine = create_engine(
    DATABASE_URL,
    pool_size=20,           # Connection pool –¥–ª—è production
    max_overflow=10,
    pool_pre_ping=True,     # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º
    pool_recycle=3600       # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫–∞–∂–¥—ã–π —á–∞—Å
)

SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
def create_tables():
    from models import Base
    Base.metadata.create_all(bind=engine)

# Dependency –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ –ë–î
def get_db():
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close() 