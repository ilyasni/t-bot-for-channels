"""
Dialogue Assessor Agent - –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –¥–∏–∞–ª–æ–≥–∞ —á–µ—Ä–µ–∑ LLM

LLM-based –∞–≥–µ–Ω—Ç –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –¥–∏–∞–ª–æ–≥–∞ –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
–¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥—Ä—É–≥–∏–º–∏ –∞–≥–µ–Ω—Ç–∞–º–∏.
"""

import logging
from typing import Dict, Any
from .base import BaseAgent
from .schemas import AssessmentOutput
from .config import config

logger = logging.getLogger(__name__)


class DialogueAssessorAgent(BaseAgent):
    """
    LLM-based –∞–≥–µ–Ω—Ç –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –¥–∏–∞–ª–æ–≥–∞
    
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç:
    - detail_level: —É—Ä–æ–≤–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–Ω–∞–ª–∏–∑–∞
    - dialogue_type: —Ç–∏–ø –¥–∏–∞–ª–æ–≥–∞
    - has_links: –Ω–∞–ª–∏—á–∏–µ —Å—Å—ã–ª–æ–∫
    - has_decisions: –Ω–∞–ª–∏—á–∏–µ —Ä–µ—à–µ–Ω–∏–π
    - has_questions: –Ω–∞–ª–∏—á–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤
    - has_conflicts: –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
    - complexity_score: –æ—Ü–µ–Ω–∫–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ 0.0-1.0
    - urgency_level: —É—Ä–æ–≤–µ–Ω—å —Å—Ä–æ—á–Ω–æ—Å—Ç–∏
    - participants_count: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    - dominant_topics: –¥–æ–º–∏–Ω–∏—Ä—É—é—â–∏–µ —Ç–µ–º—ã
    - context_notes: –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏
    """
    
    def __init__(self):
        system_prompt = """–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –¥–∏–∞–ª–æ–≥–æ–≤. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –±—ã—Å—Ç—Ä–æ –∏ —Ç–æ—á–Ω–æ –æ—Ü–µ–Ω–∏—Ç—å –¥–∏–∞–ª–æ–≥ –∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏.

–ê–ù–ê–õ–ò–ó–ò–†–£–ô –î–ò–ê–õ–û–ì –ò –û–ü–†–ï–î–ï–õ–ò:

1. **–£—Ä–æ–≤–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ (detail_level):**
   - micro: ‚â§5 —Å–æ–æ–±—â–µ–Ω–∏–π, –ø—Ä–æ—Å—Ç–æ–π –æ–±–º–µ–Ω –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
   - brief: 6-15 —Å–æ–æ–±—â–µ–Ω–∏–π, –∫—Ä–∞—Ç–∫–æ–µ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ
   - standard: 16-30 —Å–æ–æ–±—â–µ–Ω–∏–π, –æ–±—ã—á–Ω–æ–µ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ
   - detailed: 31-50 —Å–æ–æ–±—â–µ–Ω–∏–π, –¥–µ—Ç–∞–ª—å–Ω–æ–µ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ
   - comprehensive: >50 —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –¥–∏–∞–ª–æ–≥

2. **–¢–∏–ø –¥–∏–∞–ª–æ–≥–∞ (dialogue_type):**
   - discussion: –æ–±—Å—É–∂–¥–µ–Ω–∏–µ —Ç–µ–º, –æ–±–º–µ–Ω –º–Ω–µ–Ω–∏—è–º–∏
   - question_answer: –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã
   - announcement: –æ–±—ä—è–≤–ª–µ–Ω–∏—è, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   - brainstorming: –º–æ–∑–≥–æ–≤–æ–π —à—Ç—É—Ä–º, –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–¥–µ–π
   - planning: –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è
   - support: –ø–æ–¥–¥–µ—Ä–∂–∫–∞, –ø–æ–º–æ—â—å
   - mixed: —Å–º–µ—à–∞–Ω–Ω—ã–π —Ç–∏–ø

3. **–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–∏–∞–ª–æ–≥–∞:**
   - has_links: –µ—Å—Ç—å –ª–∏ —Å—Å—ã–ª–∫–∏ (http, www, .com, .ru, t.me/, @)
   - has_decisions: –ø—Ä–∏–Ω–∏–º–∞–ª–∏—Å—å –ª–∏ —Ä–µ—à–µ–Ω–∏—è
   - has_questions: –µ—Å—Ç—å –ª–∏ –≤–æ–ø—Ä–æ—Å—ã —Ç—Ä–µ–±—É—é—â–∏–µ –æ—Ç–≤–µ—Ç–∞
   - has_conflicts: –µ—Å—Ç—å –ª–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∏–ª–∏ —Ä–∞–∑–Ω–æ–≥–ª–∞—Å–∏—è

4. **–û—Ü–µ–Ω–∫–∏:**
   - complexity_score: —Å–ª–æ–∂–Ω–æ—Å—Ç—å –¥–∏–∞–ª–æ–≥–∞ 0.0-1.0 (0=–ø—Ä–æ—Å—Ç–æ–π, 1=–æ—á–µ–Ω—å —Å–ª–æ–∂–Ω—ã–π)
   - urgency_level: —Å—Ä–æ—á–Ω–æ—Å—Ç—å (low/medium/high/critical)

5. **–ö–æ–Ω—Ç–µ–∫—Å—Ç:**
   - participants_count: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
   - dominant_topics: 3-5 –∫–ª—é—á–µ–≤—ã—Ö —Ç–µ–º –¥–∏–∞–ª–æ–≥–∞
   - context_notes: –∫—Ä–∞—Ç–∫–∏–µ –∑–∞–º–µ—Ç–∫–∏ –æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–µ –¥–∏–∞–ª–æ–≥–∞

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
```json
{{
  "detail_level": "standard",
  "dialogue_type": "discussion",
  "has_links": false,
  "has_decisions": true,
  "has_questions": true,
  "has_conflicts": false,
  "complexity_score": 0.6,
  "urgency_level": "medium",
  "message_count": 25,
  "participants_count": 5,
  "dominant_topics": ["–ø—Ä–æ–µ–∫—Ç", "–¥–µ–¥–ª–∞–π–Ω", "–∫–æ–º–∞–Ω–¥–∞"],
  "context_notes": "–û–±—Å—É–∂–¥–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ —Å –¥–µ–¥–ª–∞–π–Ω–æ–º, –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∫–æ–º–∞–Ω–¥–µ"
}}
```

–í–ê–ñ–ù–û: –ë—É–¥—å —Ç–æ—á–Ω—ã–º –∏ –æ–±—ä–µ–∫—Ç–∏–≤–Ω—ã–º –≤ –æ—Ü–µ–Ω–∫–µ. –£—á–∏—Ç—ã–≤–∞–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ —Å–ø–µ—Ü–∏—Ñ–∏–∫—É –¥–∏–∞–ª–æ–≥–∞."""

        super().__init__(
            llm=config.get_llm("gpt2giga"),
            system_prompt=system_prompt,
            agent_name="dialogue_assessor",
            output_model=AssessmentOutput,
            timeout=config.agent_timeouts["dialogue_assessor"]
        )
        logger.info("ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω LLM –∞–≥–µ–Ω—Ç: dialogue_assessor")
    
    async def _process_input(self, input_data: Dict[str, Any]) -> str:
        """–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ user message –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∏–∞–ª–æ–≥–∞"""
        messages_text = input_data.get("messages", "")
        hours = input_data.get("hours", 24)
        
        user_message = f"""–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –¥–∏–∞–ª–æ–≥ –∏ –æ–ø—Ä–µ–¥–µ–ª–∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏.

–ü–ï–†–ò–û–î: {hours} —á–∞—Å–æ–≤
–î–ò–ê–õ–û–ì:
{messages_text}

–ü—Ä–æ–≤–µ–¥–∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏ –≤–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º JSON —Ñ–æ—Ä–º–∞—Ç–µ."""
        
        return user_message
    
    async def _process_output(self, result: AssessmentOutput, input_data: Dict[str, Any]) -> Dict[str, Any]:
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞"""
        logger.info(f"üìä –û—Ü–µ–Ω–∫–∞ –¥–∏–∞–ª–æ–≥–∞: {result.detail_level} –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è, {result.dialogue_type} —Ç–∏–ø")
        logger.info(f"   –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {result.participants_count}, –°–æ–æ–±—â–µ–Ω–∏–π: {result.message_count}")
        logger.info(f"   –°–ª–æ–∂–Ω–æ—Å—Ç—å: {result.complexity_score:.1f}, –°—Ä–æ—á–Ω–æ—Å—Ç—å: {result.urgency_level}")
        logger.info(f"   –†–µ—à–µ–Ω–∏—è: {result.has_decisions}, –í–æ–ø—Ä–æ—Å—ã: {result.has_questions}, –ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã: {result.has_conflicts}")
        
        return {
            "detail_level": result.detail_level,
            "dialogue_type": result.dialogue_type,
            "has_links": result.has_links,
            "has_decisions": result.has_decisions,
            "has_questions": result.has_questions,
            "has_conflicts": result.has_conflicts,
            "complexity_score": result.complexity_score,
            "urgency_level": result.urgency_level,
            "message_count": result.message_count,
            "participants_count": result.participants_count,
            "dominant_topics": result.dominant_topics,
            "context_notes": result.context_notes
        }