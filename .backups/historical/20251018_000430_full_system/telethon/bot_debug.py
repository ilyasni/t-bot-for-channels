#!/usr/bin/env python3
"""Debug –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –ª–æ–≥–∞–º–∏"""

import logging
import os
from dotenv import load_dotenv

load_dotenv()

# –í–∫–ª—é—á–∞–µ–º DEBUG –¥–ª—è –≤—Å–µ—Ö –ª–æ–≥–≥–µ—Ä–æ–≤
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

# –û—Ç–∫–ª—é—á–∞–µ–º –ª–∏—à–Ω–∏–π —à—É–º –æ—Ç httpx
logging.getLogger("httpx").setLevel(logging.WARNING)

logger = logging.getLogger(__name__)

from bot import TelegramBot
from database import create_tables

logger.info("="*60)
logger.info("üêõ DEBUG MODE - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –ª–æ–≥–∞–º–∏")
logger.info("="*60)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
logger.info(f"BOT_TOKEN: {'—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if os.getenv('BOT_TOKEN') else '–ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
logger.info(f"TELEGRAM_DATABASE_URL: {'—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if os.getenv('TELEGRAM_DATABASE_URL') else '–ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
logger.info(f"MASTER_API_ID: {os.getenv('MASTER_API_ID')}")

# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
logger.info("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...")
create_tables()
logger.info("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
logger.info("–°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞...")
bot = TelegramBot()

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ handlers
logger.info("="*60)
logger.info("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ handlers:")
for group, handlers in bot.application.handlers.items():
    logger.info(f"  Group {group}: {len(handlers)} handlers")
    for h in handlers[:5]:
        handler_type = type(h).__name__
        logger.info(f"    - {handler_type}")
        if hasattr(h, 'entry_points'):
            logger.info(f"      Entry points: {len(h.entry_points)}")
logger.info("="*60)

# –ó–∞–ø—É—Å–∫–∞–µ–º
logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ DEBUG —Ä–µ–∂–∏–º–µ...")
bot.run()

