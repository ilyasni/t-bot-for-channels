#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Telegram Bot —Å LangChain Direct Integration

echo "üöÄ –ó–∞–ø—É—Å–∫ Telegram Bot —Å LangChain Direct Integration"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
if [ ! -f .env ]; then
    echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "   –°–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.example –≤ .env –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:"
    echo "   cp .env.example .env"
    echo "   nano .env"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
source .env

if [ -z "$BOT_TOKEN" ]; then
    echo "‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ"
    exit 1
fi

if [ -z "$MASTER_API_ID" ]; then
    echo "‚ùå MASTER_API_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ"
    exit 1
fi

if [ -z "$MASTER_API_HASH" ]; then
    echo "‚ùå MASTER_API_HASH –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ"
    exit 1
fi

if [ -z "$ENCRYPTION_KEY" ]; then
    echo "‚ùå ENCRYPTION_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ"
    exit 1
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ USE_LANGCHAIN_DIRECT=true
echo "üîß –í–∫–ª—é—á–µ–Ω–∏–µ LangChain Direct Integration"
export USE_LANGCHAIN_DIRECT=true

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞
if grep -q "USE_LANGCHAIN_DIRECT=" .env; then
    sed -i 's/USE_LANGCHAIN_DIRECT=.*/USE_LANGCHAIN_DIRECT=true/' .env
else
    echo "USE_LANGCHAIN_DIRECT=true" >> .env
fi

echo "‚úÖ LangChain Direct Integration –≤–∫–ª—é—á–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∑–∞–≤–∏—Å–∏–º—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL
if ! docker compose ps postgres | grep -q "Up"; then
    echo "‚ö†Ô∏è  PostgreSQL –Ω–µ –∑–∞–ø—É—â–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º..."
    docker compose up -d postgres
    sleep 10
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis
if ! docker compose ps redis | grep -q "Up"; then
    echo "‚ö†Ô∏è  Redis –Ω–µ –∑–∞–ø—É—â–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º..."
    docker compose up -d redis
    sleep 5
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ gpt2giga-proxy
if ! docker compose ps gpt2giga-proxy | grep -q "Up"; then
    echo "‚ö†Ô∏è  gpt2giga-proxy –Ω–µ –∑–∞–ø—É—â–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º..."
    docker compose up -d gpt2giga-proxy
    sleep 10
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ n8n (–¥–ª—è fallback)
if ! docker compose ps n8n | grep -q "Up"; then
    echo "‚ö†Ô∏è  n8n –Ω–µ –∑–∞–ø—É—â–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –¥–ª—è fallback..."
    docker compose up -d n8n
    sleep 15
fi

echo "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ telethon —Å LangChain
echo "üî® –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ Telegram Bot —Å LangChain..."
docker compose up -d --build telethon

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
if docker compose ps telethon | grep -q "Up"; then
    echo "‚úÖ Telegram Bot —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω —Å LangChain Direct Integration!"
    echo ""
    echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:"
    echo "   –õ–æ–≥–∏: docker compose logs -f telethon"
    echo "   –°—Ç–∞—Ç—É—Å: docker compose ps telethon"
    echo ""
    echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
    echo "   –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: docker compose stop telethon"
    echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å: docker compose restart telethon"
    echo "   –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ n8n: sed -i 's/USE_LANGCHAIN_DIRECT=true/USE_LANGCHAIN_DIRECT=false/' .env && docker compose restart telethon"
    echo ""
    echo "üìà Observability:"
    echo "   Langfuse: https://langfuse.produman.studio"
    echo "   Prometheus: http://localhost:9090"
    echo "   Grafana: http://localhost:3000"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Telegram Bot"
    echo "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker compose logs telethon"
    exit 1
fi
