##### Change the name of this file to .env after updating it!

############
# [required]
# flowise credentials - you set this to whatever you want, just make it a long and secure string for both!
############

FLOWISE_USERNAME="hello@ilyasni.com"
FLOWISE_PASSWORD="Tiko0tGSrYf1UTgOmBQEFgqD1yG5IgMC"


############
# [required]
# n8n credentials - you set this to whatever you want, just make it a long and secure string for both!
############

N8N_ENCRYPTION_KEY="Ci7RFL516diMZLlYsB3497DdBQGJf+th5/+w73qy82JzM8urpHZOn14vGW+B4oYC"
N8N_USER_MANAGEMENT_JWT_SECRET="hBmZ31dRJFa5byY7KJBGlk7QPIoHtbUhp7QK7qxkAUkOxM9d19QNsxT1Dv34/1Vl"


############
# [required]
# grafana credentials - you set this to whatever you want, just make it a long and secure string for both!
############

GRAFANA_ADMIN_PASSWORD="T6C8usHlJ5b2bSGRq8J8JyKpEfIkrJBZ"


############
# [required]
# prometheus credentials - you set this to whatever you want, just make it a long and secure string for both!
############

PROMETHEUS_USERNAME="hello@ilyasni.com"
PROMETHEUS_PASSWORD="oQwOojSTAKjGzNQPectF9I4rUZWYAugM"


############
# [required]
# searxng credentials - you set this to whatever you want, just make it a long and secure string for both!
############

SEARXNG_USERNAME="hello@ilyasni.com"
SEARXNG_PASSWORD="B5Hp8jfp7sjDnb4XwRRzPo54RYETVOhX"


############
# [required]
# Supabase Secrets

# YOU MUST CHANGE THESE BEFORE GOING INTO PRODUCTION
# Read these docs for any help: https://supabase.com/docs/guides/self-hosting/docker
# For the JWT Secret and keys, see: https://supabase.com/docs/guides/self-hosting/docker#generate-api-keys
# For the other secrets, see: https://supabase.com/docs/guides/self-hosting/docker#update-secrets
# You can really decide any value for POOLER_TENANT_ID like 1000.

# Note that using special symbols (like '%') can complicate things a bit for your Postgres password.
# If you use special symbols in your Postgres password, you must remember to percent-encode your password later if using the Postgres connection string, for example, postgresql://postgres.projectref:p%3Dword@aws-0-us-east-1.pooler.supabase.com:6543/postgres
############

POSTGRES_PASSWORD="xiNmSysbbcqTOWT4eb1KkQtM2fb8X7Ms"
JWT_SECRET="yCTS9oIYGXnL3p7v+O0wfxrZQd3iBhj6BXOdxou6fFc4h5e6BXAFoJLxSWSj6CIt"
ANON_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlzcyI6InN1cGFiYXNlIiwiaWF0IjoxNzU0MTYzNDI5LCJleHAiOjIwNjk1MjM0Mjl9._2h4eTjiidMb_jIPHMeJ3DBG09sHTuVPWgGIReh-51Y"
SERVICE_ROLE_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoic2VydmljZV9yb2xlIiwiaXNzIjoic3VwYWJhc2UiLCJpYXQiOjE3NTQxNjM0MjksImV4cCI6MjA2OTUyMzQyOX0.-IO9m8kTpGSyEP7YVDqv2RiD0K5FeX3eKvmUf7Tx6_4"
DASHBOARD_USERNAME="hello@ilyasni.com"
DASHBOARD_PASSWORD="QrrzcZn1eepqlBEhOuP5d9f9FU6cUQuz"
POOLER_TENANT_ID=1000


############
# [required] 
# Weaviate username and password
############

WEAVIATE_USERNAME="hello@ilyasni.com"
WEAVIATE_API_KEY="0K11cMoh6QGN0Hyv0sH4NiEd+REIv18pArNWkej0QThXgRmk"


############
# [required]
# Qdrant API Key
############
QDRANT_API_KEY="HY56smNEHTbE2ogKJEl6qHAGabP2eFycteeVkvKfdTZ7uoI7"


############
# [required]
# Neo4j username and password
############

NEO4J_AUTH_USERNAME="neo4j"
NEO4J_AUTH_PASSWORD="5L0Dp8GyQie19RBdhQTYFL5BLgcpDBau"


############
# [required]
# Langfuse credentials
# Each of the secret keys you can set to whatever you want, just make it secure!
# For the encryption key, use the command `openssl rand -hex 32`
#   openssl is available by defualt on Linux/Mac
#   For Windows, you can use the 'Git Bash' terminal installed with git
############

CLICKHOUSE_PASSWORD="fYSVfApChbkcVIfkH5B7TKaPCcrNqABX"
MINIO_ROOT_PASSWORD="9rC9qswHi4o9LyZTkdP8kWYcAW5zqCqS"
LANGFUSE_SALT="y7yiS4kpWRjQp4StlSI1IGrsNsXCLj6NPRm+l8lJI2Sqq1uTBeYVdUAngae3RWBX"
NEXTAUTH_SECRET="MGEWa1teAUCP12D0axELWhJlZIPjZoiPrsu7GlNyzevsaa94uTFal4oG3wd+y5y7"
ENCRYPTION_KEY="d16c98d8745366bb24443bd190a168f190e8dec30ac75dde384f88a461862a40"
LANGFUSE_INIT_PROJECT_PUBLIC_KEY="pk-lf-5f0a509bc5ac8b84593ea59366120b95"
LANGFUSE_INIT_PROJECT_SECRET_KEY="sk-lf-2fece27ac13510846e855d79f81c62e2"
LANGFUSE_INIT_USER_EMAIL="hello@ilyasni.com"
LANGFUSE_INIT_USER_PASSWORD="cwH6GjxM43Cohiaf1kCoVkwEKI3o417d"

############
# [required for prod]
# Caddy Config

# By default listen on https://localhost:[service port] and don't use an email for SSL
# To change this for production:
# Uncomment all of these environment variables for the services you want exposed
# Note that you might not want to expose Ollama or SearXNG since they aren't secured by default
# Replace the placeholder value with the host for each service (like n8n.produman.studio)
# Replace internal by your email (require to create a Let's Encrypt certificate)
############

USER_DOMAIN_NAME="produman.studio"
N8N_HOSTNAME=n8n.produman.studio
WEBUI_HOSTNAME=webui.produman.studio
FLOWISE_HOSTNAME=flowise.produman.studio
SUPABASE_HOSTNAME=supabase.produman.studio
LANGFUSE_HOSTNAME=langfuse.produman.studio
SEARXNG_HOSTNAME=searxng.produman.studio
WEAVIATE_HOSTNAME=weaviate.produman.studio
NEO4J_HOSTNAME=neo4j.produman.studio
GRAFANA_HOSTNAME=grafana.produman.studio
PROMETHEUS_HOSTNAME=prometheus.produman.studio
LETTA_HOSTNAME=letta.produman.studio
QDRANT_HOSTNAME=qdrant.produman.studio
LETSENCRYPT_EMAIL="hello@ilyasni.com"
TELEGRAM_AUTH_HOSTNAME=telegram-auth.produman.studio

# Everything below this point is optional.
# Default values will suffice unless you need more features/customization.

RUN_N8N_IMPORT="false"

   #
   #
#######
 #####
   #

############
# Optional Google Authentication for Supabase
# Get these values from the Google Admin Console
############
# ENABLE_GOOGLE_SIGNUP=true
# GOOGLE_CLIENT_ID=
# GOOGLE_CLIENT_SECRET=
# GOOGLE_REDIRECT_URI=

############
# Optional SearXNG Config
# If you run a very small or a very large instance, you might want to change the amount of used uwsgi workers and threads per worker
# More workers (= processes) means that more search requests can be handled at the same time, but it also causes more resource usage
############

# SEARXNG_UWSGI_WORKERS=4
# SEARXNG_UWSGI_THREADS=4

############
# Database - You can change these to any PostgreSQL database that has logical replication enabled.
############

POSTGRES_HOST=db
POSTGRES_DB=postgres
POSTGRES_PORT=5432
# default user is postgres
POSTGRES_USER=postgres

############
# Supavisor -- Database pooler and others that can be left as default values
############
POOLER_PROXY_PORT_TRANSACTION=6543
POOLER_DEFAULT_POOL_SIZE=20
POOLER_MAX_CLIENT_CONN=100
SECRET_KEY_BASE="/v3CSKSzwZ0lKWv4+JsdsODmjRW+/rs+jY+xkV9xWNlKCC4PyqvWkfbwzrzDzTJJ"
VAULT_ENC_KEY="HY58ovbXab80JSwkRXxH7fMfuz9AAcV7"
# Pool size for internal metadata storage used by Supavisor
# This is separate from client connections and used only by Supavisor itself
POOLER_DB_POOL_SIZE=5


############
# API Proxy - Configuration for the Kong Reverse proxy.
############

KONG_HTTP_PORT=8000
KONG_HTTPS_PORT=8443


############
# API - Configuration for PostgREST.
############

PGRST_DB_SCHEMAS=public,storage,graphql_public


############
# Auth - Configuration for the GoTrue authentication server.
############

## General
SITE_URL=http://localhost:3000
ADDITIONAL_REDIRECT_URLS=
JWT_EXPIRY=3600
DISABLE_SIGNUP=false
API_EXTERNAL_URL=http://localhost:8000

## Mailer Config
MAILER_URLPATHS_CONFIRMATION="/auth/v1/verify"
MAILER_URLPATHS_INVITE="/auth/v1/verify"
MAILER_URLPATHS_RECOVERY="/auth/v1/verify"
MAILER_URLPATHS_EMAIL_CHANGE="/auth/v1/verify"

## Email auth
ENABLE_EMAIL_SIGNUP=true
ENABLE_EMAIL_AUTOCONFIRM=true
SMTP_ADMIN_EMAIL=admin@example.com
SMTP_HOST=supabase-mail
SMTP_PORT=2500
SMTP_USER=fake_mail_user
SMTP_PASS=fake_mail_password
SMTP_SENDER_NAME=fake_sender
ENABLE_ANONYMOUS_USERS=false

## Phone auth
ENABLE_PHONE_SIGNUP=true
ENABLE_PHONE_AUTOCONFIRM=true


############
# Studio - Configuration for the Dashboard
############

STUDIO_DEFAULT_ORGANIZATION=Organization
STUDIO_DEFAULT_PROJECT=Project

STUDIO_PORT=3000
# replace if you intend to use Studio outside of localhost
SUPABASE_PUBLIC_URL=http://localhost:8000

# Enable webp support
IMGPROXY_ENABLE_WEBP_DETECTION=true

# Add your OpenAI API key to enable SQL Editor Assistant
OPENAI_API_KEY="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"


############
# Functions - Configuration for Functions
############
# NOTE: VERIFY_JWT applies to all functions. Per-function VERIFY_JWT is not supported yet.
FUNCTIONS_VERIFY_JWT=false


############
# Logs - Configuration for Analytics
# Please refer to https://supabase.com/docs/reference/self-hosting-analytics/introduction
############

# Change vector.toml sinks to reflect this change
# these cannot be the same value
LOGFLARE_PUBLIC_ACCESS_TOKEN="not-in-use"
LOGFLARE_PRIVATE_ACCESS_TOKEN="not-in-use"

# Docker socket location - this value will differ depending on your OS
DOCKER_SOCKET_LOCATION=/var/run/docker.sock

# Google Cloud Project details
GOOGLE_PROJECT_ID=GOOGLE_PROJECT_ID
GOOGLE_PROJECT_NUMBER=GOOGLE_PROJECT_NUMBER

# Letta
LETTA_SERVER_PASSWORD="tQ1cMKU4mZqIVeoIKiBmIeQzTjPTIjhA"

# Langsmith
LANGCHAIN_ENDPOINT=https://api.smith.langchain.com
LANGCHAIN_TRACING_V2=true
LANGCHAIN_API_KEY=


# Bot Token
BOT_TOKEN=7914772496:AAHpXmBltWg1XztwwyCXSs5mc7kvvkTdwPw

# Подключение к Supabase PostgreSQL через основной контейнер
TELEGRAM_DATABASE_URL=postgresql://postgres:xiNmSysbbcqTOWT4eb1KkQtM2fb8X7Ms@supabase-db:5432/postgres?sslmode=disable

# OpenRouter AI settings (для автоматического тегирования постов)
OPENROUTER_API_KEY=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

# Encryption settings
# Сгенерируйте ключ командой: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
ENCRYPTION_KEY=otA4GSqKLL5mRQ6wLUen-Xk5KYuapM9NaRBZ0q6tEro=


# Post retention settings (настройки хранения постов)
DEFAULT_RETENTION_DAYS=30
# Период хранения постов в днях для новых пользователей (по умолчанию 30 дней)
# Каждый пользователь может настроить свой период через API

CLEANUP_SCHEDULE_TIME=03:00
# Время ежедневной автоматической очистки устаревших постов (формат HH:MM)
# Посты старше retention_days от последнего поста канала будут удалены 

###########################################################################################
# GPT2Giga Proxy Settings
# Provides OpenAI-compatible API proxy for GigaChat
###########################################################################################
GIGACHAT_CREDENTIALS=N2MwNTA0NGMtZTM4Yy00YjRhLTliZjEtYTI5YzVmMWE4ZWMyOmRmM2Q3MWY1LTI2ZDItNDA2MS04NzVjLTIyYzNkM2YwMWRjMg==

###########################################################################################
N8N_WORKER_COUNT="1"
PROMETHEUS_PASSWORD_HASH="$$2a$$14$$jJ6wcThA9HLHBZbmgpXCeuFJiHlYjxognFsm1wXPSOR3eRmJQJYXu"
SEARXNG_PASSWORD_HASH="$$2a$$14$$ynCuyfpPtWKzSLgaMxyW4eR52.Uq3s1xxWX0/wQiCDDt04lE573SK"
COMPOSE_PROFILES=n8n,flowise,qdrant,supabase,searxng,crawl4ai,cpu,langfuse,neo4j,monitoring

# Tagging Service Configuration
TAGGING_PROVIDER=gigachat
TAGGING_FALLBACK_OPENROUTER=true
GIGACHAT_MODEL=GigaChat

# Searxng для гибридного поиска (используется в RAG)
SEARXNG_ENABLED=true
SEARXNG_URL=http://searxng:8080
SEARXNG_USER=hello@ilyasni.com
SEARXNG_MAX_RESULTS=5
REDIS_AUTH=LOCALONLYREDIS

############################################################
# Telegram Parser - Shared Master Credentials
############################################################
# Создайте приложение на https://my.telegram.org
# MASTER_API_ID=182419
# MASTER_API_HASH=14635a2abe7976a75cdc5c788df918e3

MASTER_API_ID=9602513
MASTER_API_HASH=d72f161ad90794db968e19cc24e77efa

# Администраторы (telegram_id через запятую)
# Первый ID будет автоматически назначен администратором при миграции
ADMIN_TELEGRAM_IDS=8124731874

# Telegram Parser - Debug Settings
DEBUG_LOGS=false

SALUTESPEECH_CLIENT_ID=0199deda-86df-7467-b2be-7f3d6d12541b
SALUTESPEECH_CLIENT_SECRET=d944b976-a759-4fc8-8297-13258aa37a82
SALUTESPEECH_SCOPE=SALUTE_SPEECH_PERS
SALUTESPEECH_URL=https://smartspeech.sber.ru/rest/v1
RAG_SERVICE_HOSTNAME=rag.produman.studio
SEARXNG_USERNAME=admin
